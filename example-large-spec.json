{
  "openapi": "3.0.3",
  "info": {
    "title": "Advanced E-Commerce Platform API",
    "description": "A comprehensive e-commerce platform API with complex schemas, nested references, oneOf patterns, and detailed endpoint documentation. This API handles user management, product catalog, inventory tracking, order processing, payment integration, shipping coordination, and analytics reporting. Features include real-time notifications, webhook integrations, multi-tenant support, advanced search capabilities, recommendation engines, and comprehensive audit trails.",
    "version": "2.1.4",
    "contact": {
      "name": "API Support Team",
      "url": "https://docs.ecommerce-platform.com",
      "email": "api-support@ecommerce-platform.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.ecommerce-platform.com/v2",
      "description": "Production server"
    },
    {
      "url": "https://staging-api.ecommerce-platform.com/v2",
      "description": "Staging server for testing"
    }
  ],
  "security": [
    {
      "BearerAuth": [],
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "List all users with advanced filtering and pagination",
        "description": "Retrieve a paginated list of users with support for complex filtering, sorting, and search operations. Supports role-based access control and field selection for optimized responses.",
        "operationId": "listUsers",
        "tags": ["User Management"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (1-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter users by their role in the system",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["admin", "customer", "vendor", "support", "moderator"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter users by account status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "inactive", "suspended", "pending_verification"]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search users by name, email, or username",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions to access user list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user account",
        "description": "Register a new user in the system with comprehensive profile information, preferences, and security settings. Supports automatic email verification and welcome workflows.",
        "operationId": "createUser",
        "tags": ["User Management"],
        "requestBody": {
          "description": "User information for account creation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user data provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "User with email or username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get detailed user information by ID",
        "description": "Retrieve comprehensive information about a specific user including profile data, preferences, order history summary, and account status.",
        "operationId": "getUserById",
        "tags": ["User Management"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Unique identifier for the user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Additional data to include in response",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["orders", "addresses", "payment_methods", "preferences", "activity_log"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Search and list products with advanced filtering",
        "description": "Comprehensive product search with support for category filtering, price ranges, brand filtering, availability status, ratings, and full-text search across titles and descriptions.",
        "operationId": "searchProducts",
        "tags": ["Product Catalog"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query for product title and description",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 200
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter by product category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "description": "Filter by brand name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Minimum price filter",
            "required": false,
            "schema": {
              "type": "number",
              "format": "decimal",
              "minimum": 0
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Maximum price filter",
            "required": false,
            "schema": {
              "type": "number",
              "format": "decimal",
              "minimum": 0
            }
          },
          {
            "name": "inStock",
            "in": "query",
            "description": "Filter by stock availability",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort products by specified field",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["price", "name", "rating", "popularity", "newest", "discount"]
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order direction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product search results retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product in the catalog",
        "description": "Add a new product to the catalog with comprehensive information including variants, pricing, inventory, SEO data, and media assets.",
        "operationId": "createProduct",
        "tags": ["Product Management"],
        "requestBody": {
          "description": "Complete product information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "List orders with comprehensive filtering options",
        "description": "Retrieve orders with support for filtering by status, date ranges, customer, payment status, and fulfillment status. Includes order totals and summary information.",
        "operationId": "listOrders",
        "tags": ["Order Management"],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter orders by status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["pending", "confirmed", "processing", "shipped", "delivered", "cancelled", "refunded"]
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Filter orders by customer ID",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Filter orders from this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Filter orders up to this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new order",
        "description": "Process a new order with items, shipping information, payment details, and customer preferences. Includes inventory validation and pricing calculations.",
        "operationId": "createOrder",
        "tags": ["Order Management"],
        "requestBody": {
          "description": "Order creation data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid order data or insufficient inventory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/notifications": {
      "post": {
        "summary": "Handle incoming webhook notifications",
        "description": "Process various webhook notifications from external services including payment processors, shipping providers, and third-party integrations.",
        "operationId": "processWebhook",
        "tags": ["Webhooks"],
        "requestBody": {
          "description": "Webhook notification payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Bearer token authentication"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key authentication for service-to-service calls"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "description": "Core user entity with profile and account information",
        "required": ["id", "email", "username", "role", "status"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique user identifier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "description": "Unique username for the account"
          },
          "firstName": {
            "type": "string",
            "maxLength": 100,
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "maxLength": 100,
            "description": "User's last name"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "customer", "vendor", "support", "moderator"],
            "description": "User's role in the system"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "suspended", "pending_verification"],
            "description": "Current account status"
          },
          "profile": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "preferences": {
            "$ref": "#/components/schemas/UserPreferences"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last profile update timestamp"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last successful login timestamp"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "description": "Extended user profile information",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "uri",
            "description": "URL to user's profile picture"
          },
          "bio": {
            "type": "string",
            "maxLength": 500,
            "description": "User's biographical information"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "description": "User's date of birth"
          },
          "phoneNumber": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$",
            "description": "User's phone number in E.164 format"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "User's saved addresses"
          },
          "socialProfiles": {
            "$ref": "#/components/schemas/SocialProfiles"
          }
        }
      },
      "UserPreferences": {
        "type": "object",
        "description": "User's application preferences and settings",
        "properties": {
          "language": {
            "type": "string",
            "enum": ["en", "es", "fr", "de", "it", "pt", "ja", "ko", "zh"],
            "default": "en",
            "description": "Preferred language code"
          },
          "currency": {
            "type": "string",
            "enum": ["USD", "EUR", "GBP", "CAD", "AUD", "JPY", "KRW", "CNY"],
            "default": "USD",
            "description": "Preferred currency code"
          },
          "timezone": {
            "type": "string",
            "description": "User's timezone identifier"
          },
          "notifications": {
            "$ref": "#/components/schemas/NotificationPreferences"
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacySettings"
          }
        }
      },
      "Address": {
        "type": "object",
        "description": "Physical address information",
        "required": ["street", "city", "country"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique address identifier"
          },
          "type": {
            "type": "string",
            "enum": ["home", "work", "billing", "shipping"],
            "description": "Address type classification"
          },
          "label": {
            "type": "string",
            "maxLength": 100,
            "description": "Custom label for the address"
          },
          "street": {
            "type": "string",
            "maxLength": 200,
            "description": "Street address line 1"
          },
          "street2": {
            "type": "string",
            "maxLength": 200,
            "description": "Street address line 2 (apartment, suite, etc.)"
          },
          "city": {
            "type": "string",
            "maxLength": 100,
            "description": "City name"
          },
          "state": {
            "type": "string",
            "maxLength": 100,
            "description": "State or province"
          },
          "postalCode": {
            "type": "string",
            "maxLength": 20,
            "description": "Postal or ZIP code"
          },
          "country": {
            "type": "string",
            "pattern": "^[A-Z]{2}$",
            "description": "Two-letter country code (ISO 3166-1 alpha-2)"
          },
          "isDefault": {
            "type": "boolean",
            "default": false,
            "description": "Whether this is the default address for its type"
          }
        }
      },
      "Product": {
        "type": "object",
        "description": "Complete product information with variants and metadata",
        "required": ["id", "name", "sku", "price", "category"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique product identifier"
          },
          "name": {
            "type": "string",
            "maxLength": 200,
            "description": "Product name or title"
          },
          "description": {
            "type": "string",
            "maxLength": 2000,
            "description": "Detailed product description"
          },
          "sku": {
            "type": "string",
            "maxLength": 50,
            "description": "Stock Keeping Unit identifier"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImage"
            },
            "description": "Product images and media"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariant"
            },
            "description": "Product variants (size, color, etc.)"
          },
          "specifications": {
            "$ref": "#/components/schemas/ProductSpecifications"
          },
          "inventory": {
            "$ref": "#/components/schemas/InventoryInfo"
          },
          "ratings": {
            "$ref": "#/components/schemas/ProductRatings"
          },
          "seo": {
            "$ref": "#/components/schemas/SEOData"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "discontinued", "coming_soon"],
            "description": "Product availability status"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Product tags for categorization and search"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Product creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last product update timestamp"
          }
        }
      },
      "Price": {
        "type": "object",
        "description": "Comprehensive pricing information",
        "required": ["amount", "currency"],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal",
            "minimum": 0,
            "description": "Base price amount"
          },
          "currency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$",
            "description": "Three-letter currency code (ISO 4217)"
          },
          "originalAmount": {
            "type": "number",
            "format": "decimal",
            "minimum": 0,
            "description": "Original price before discounts"
          },
          "discountPercentage": {
            "type": "number",
            "format": "decimal",
            "minimum": 0,
            "maximum": 100,
            "description": "Discount percentage applied"
          },
          "taxAmount": {
            "type": "number",
            "format": "decimal",
            "minimum": 0,
            "description": "Tax amount included in price"
          },
          "priceBreaks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceBreak"
            },
            "description": "Volume-based pricing tiers"
          }
        }
      },
      "Order": {
        "type": "object",
        "description": "Complete order information with items and fulfillment details",
        "required": ["id", "customerId", "items", "total", "status"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique order identifier"
          },
          "orderNumber": {
            "type": "string",
            "description": "Human-readable order number"
          },
          "customerId": {
            "type": "string",
            "format": "uuid",
            "description": "Customer who placed the order"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "minItems": 1,
            "description": "Items included in the order"
          },
          "total": {
            "$ref": "#/components/schemas/OrderTotal"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "processing", "shipped", "delivered", "cancelled", "refunded"],
            "description": "Current order status"
          },
          "payment": {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "billing": {
            "$ref": "#/components/schemas/BillingInfo"
          },
          "notes": {
            "type": "string",
            "maxLength": 1000,
            "description": "Customer notes or special instructions"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true,
            "description": "Additional order metadata"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Order creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last order update timestamp"
          }
        }
      },
      "PaymentMethod": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/CreditCardPayment"
          },
          {
            "$ref": "#/components/schemas/PayPalPayment"
          },
          {
            "$ref": "#/components/schemas/BankTransferPayment"
          },
          {
            "$ref": "#/components/schemas/CryptocurrencyPayment"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "credit_card": "#/components/schemas/CreditCardPayment",
            "paypal": "#/components/schemas/PayPalPayment",
            "bank_transfer": "#/components/schemas/BankTransferPayment",
            "cryptocurrency": "#/components/schemas/CryptocurrencyPayment"
          }
        }
      },
      "CreditCardPayment": {
        "type": "object",
        "description": "Credit card payment method information",
        "required": ["type", "cardNumber", "expiryDate", "cvv"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["credit_card"],
            "description": "Payment method type"
          },
          "cardNumber": {
            "type": "string",
            "pattern": "^[0-9]{13,19}$",
            "description": "Credit card number"
          },
          "expiryDate": {
            "type": "string",
            "pattern": "^(0[1-9]|1[0-2])\\/([0-9]{2})$",
            "description": "Card expiry date in MM/YY format"
          },
          "cvv": {
            "type": "string",
            "pattern": "^[0-9]{3,4}$",
            "description": "Card verification value"
          },
          "cardholderName": {
            "type": "string",
            "maxLength": 100,
            "description": "Name on the credit card"
          },
          "brand": {
            "type": "string",
            "enum": ["visa", "mastercard", "amex", "discover", "jcb"],
            "description": "Credit card brand"
          }
        }
      },
      "PayPalPayment": {
        "type": "object",
        "description": "PayPal payment method information",
        "required": ["type", "email"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["paypal"],
            "description": "Payment method type"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "PayPal account email"
          },
          "accountId": {
            "type": "string",
            "description": "PayPal account identifier"
          }
        }
      },
      "BankTransferPayment": {
        "type": "object",
        "description": "Bank transfer payment method",
        "required": ["type", "accountNumber", "routingNumber"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["bank_transfer"],
            "description": "Payment method type"
          },
          "accountNumber": {
            "type": "string",
            "description": "Bank account number"
          },
          "routingNumber": {
            "type": "string",
            "description": "Bank routing number"
          },
          "bankName": {
            "type": "string",
            "description": "Name of the bank"
          }
        }
      },
      "CryptocurrencyPayment": {
        "type": "object",
        "description": "Cryptocurrency payment method",
        "required": ["type", "currency", "walletAddress"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["cryptocurrency"],
            "description": "Payment method type"
          },
          "currency": {
            "type": "string",
            "enum": ["BTC", "ETH", "LTC", "BCH", "XRP"],
            "description": "Cryptocurrency type"
          },
          "walletAddress": {
            "type": "string",
            "description": "Cryptocurrency wallet address"
          },
          "networkFee": {
            "type": "number",
            "format": "decimal",
            "description": "Network transaction fee"
          }
        }
      },
      "WebhookPayload": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/PaymentWebhook"
          },
          {
            "$ref": "#/components/schemas/ShippingWebhook"
          },
          {
            "$ref": "#/components/schemas/InventoryWebhook"
          }
        ]
      },
      "PaymentWebhook": {
        "type": "object",
        "description": "Payment-related webhook notification",
        "required": ["type", "eventId", "paymentId", "status"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["payment"],
            "description": "Webhook type"
          },
          "eventId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique event identifier"
          },
          "paymentId": {
            "type": "string",
            "format": "uuid",
            "description": "Payment transaction identifier"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "completed", "failed", "refunded", "cancelled"],
            "description": "Payment status"
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "description": "Payment amount"
          },
          "currency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$",
            "description": "Payment currency"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Event timestamp"
          }
        }
      },
      "ShippingWebhook": {
        "type": "object",
        "description": "Shipping-related webhook notification",
        "required": ["type", "eventId", "trackingNumber", "status"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["shipping"],
            "description": "Webhook type"
          },
          "eventId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique event identifier"
          },
          "trackingNumber": {
            "type": "string",
            "description": "Shipment tracking number"
          },
          "status": {
            "type": "string",
            "enum": ["label_created", "picked_up", "in_transit", "delivered", "exception"],
            "description": "Shipping status"
          },
          "carrier": {
            "type": "string",
            "description": "Shipping carrier name"
          },
          "estimatedDelivery": {
            "type": "string",
            "format": "date-time",
            "description": "Estimated delivery timestamp"
          }
        }
      },
      "InventoryWebhook": {
        "type": "object",
        "description": "Inventory-related webhook notification",
        "required": ["type", "eventId", "productId", "quantity"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["inventory"],
            "description": "Webhook type"
          },
          "eventId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique event identifier"
          },
          "productId": {
            "type": "string",
            "format": "uuid",
            "description": "Product identifier"
          },
          "quantity": {
            "type": "integer",
            "description": "Current inventory quantity"
          },
          "threshold": {
            "type": "integer",
            "description": "Low stock threshold"
          },
          "location": {
            "type": "string",
            "description": "Warehouse or storage location"
          }
        }
      },
      "UserListResponse": {
        "type": "object",
        "description": "Paginated list of users with metadata",
        "required": ["data", "pagination"],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "Array of user objects"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          },
          "filters": {
            "type": "object",
            "description": "Applied filters for the request"
          }
        }
      },
      "ProductSearchResponse": {
        "type": "object",
        "description": "Product search results with facets and pagination",
        "required": ["data", "pagination"],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "description": "Array of matching products"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          },
          "facets": {
            "$ref": "#/components/schemas/SearchFacets"
          },
          "suggestions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search query suggestions"
          }
        }
      },
      "OrderListResponse": {
        "type": "object",
        "description": "List of orders with summary information",
        "required": ["data", "pagination"],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            },
            "description": "Array of order objects"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          },
          "summary": {
            "$ref": "#/components/schemas/OrderSummary"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Standard error response format",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code or type"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message"
          },
          "details": {
            "type": "string",
            "description": "Additional error details"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Error occurrence timestamp"
          },
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique request identifier for tracking"
          }
        }
      },
      "ValidationErrorResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          {
            "type": "object",
            "properties": {
              "validationErrors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldError"
                },
                "description": "Detailed validation errors for each field"
              }
            }
          }
        ]
      },
      "FieldError": {
        "type": "object",
        "description": "Field-specific validation error",
        "required": ["field", "message"],
        "properties": {
          "field": {
            "type": "string",
            "description": "Name of the field with validation error"
          },
          "message": {
            "type": "string",
            "description": "Validation error message"
          },
          "code": {
            "type": "string",
            "description": "Validation error code"
          },
          "rejectedValue": {
            "description": "The value that was rejected"
          }
        }
      },
      "PaginationInfo": {
        "type": "object",
        "description": "Pagination metadata for list responses",
        "required": ["page", "limit", "total", "totalPages"],
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "description": "Current page number"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "description": "Items per page"
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of items"
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of pages"
          },
          "hasNext": {
            "type": "boolean",
            "description": "Whether there is a next page"
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Whether there is a previous page"
          }
        }
      },
      "NotificationPreferences": {
        "type": "object",
        "properties": {
          "email": {
            "type": "boolean",
            "default": true
          },
          "sms": {
            "type": "boolean",
            "default": false
          },
          "push": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "PrivacySettings": {
        "type": "object",
        "properties": {
          "profileVisibility": {
            "type": "string",
            "enum": ["public", "private", "friends_only"]
          }
        }
      },
      "SocialProfiles": {
        "type": "object",
        "properties": {
          "twitter": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Brand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ProductImage": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "alt": {
            "type": "string"
          }
        }
      },
      "ProductVariant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ProductSpecifications": {
        "type": "object",
        "additionalProperties": true
      },
      "InventoryInfo": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer"
          },
          "inStock": {
            "type": "boolean"
          }
        }
      },
      "ProductRatings": {
        "type": "object",
        "properties": {
          "average": {
            "type": "number"
          },
          "count": {
            "type": "integer"
          }
        }
      },
      "SEOData": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "PriceBreak": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "OrderTotal": {
        "type": "object",
        "properties": {
          "subtotal": {
            "type": "number"
          },
          "tax": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        }
      },
      "PaymentInfo": {
        "type": "object",
        "properties": {
          "method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "method": {
            "type": "string"
          }
        }
      },
      "BillingInfo": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "SearchFacets": {
        "type": "object",
        "additionalProperties": true
      },
      "OrderSummary": {
        "type": "object",
        "properties": {
          "totalOrders": {
            "type": "integer"
          },
          "totalRevenue": {
            "type": "number"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "required": ["email", "username", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "CreateProductRequest": {
        "type": "object",
        "required": ["name", "sku", "price"],
        "properties": {
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateOrderRequest": {
        "type": "object",
        "required": ["customerId", "items"],
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          }
        }
      },
      "UserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          }
        ]
      },
      "DetailedUserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "properties": {
              "orderHistory": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        ]
      },
      "ProductResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Product"
          }
        ]
      },
      "OrderResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          }
        ]
      },
      "WebhookResponse": {
        "type": "object",
        "properties": {
          "received": {
            "type": "boolean"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}